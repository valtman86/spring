pipeline {
    agent any
    stages {
        stage('Build') { 
            steps {
                sh 'mvn -f demo/pom.xml -B -DskipTests clean package'
                sh "docker build -t loadrunner:${env.BUILD_ID} -f ./demo/Dockerfile1 ." 
            }
        }
        stage('Test') {
            steps {
                sh 'mvn -f demo/pom.xml test'
                sh "docker run -d -p 8081:8080 loadrunner:${env.BUILD_ID} -v"
                sh "curl -v http://0.0.0.0:8081/"
                sh "docker rm loadrunner:${env.BUILD_ID}"
                //sh "docker rm $(docker stop $(docker ps -a -q --filter ancestor='loadrunner:${env.BUILD_ID}' --format="{{.ID}}"))"
                }
        //}    
            //try {
            //    stage 'Approve, go production'
            //    def url = 'http://localhost:8001/'
            //    input message: "Does staging at $url look good? ", ok: "Deploy to production"
            //    }
            //finally {
            //        sh "docker stop loadrunner:${env.BUILD_ID}"
                        }
                //sh "curl http://localhost:8081"
            //}
            //post {
            //    always {
            //        junit allowEmptyResults: true, testResults:"${WORKSPACE}/test-results/*.xml"
            //    }
            //}
        //}
                
    }
}
